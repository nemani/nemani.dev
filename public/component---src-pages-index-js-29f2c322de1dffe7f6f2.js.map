{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["StyledMainContainer","styled","Main","withConfig","displayName","componentId","IndexPage","_ref","location","data","React","createElement","Layout","className","Hero","hero","edges","About","about","Jobs","jobs","Featured","featured","Projects","projects","Contact","contact"],"mappings":"2FAAA,oEAeA,MAAMA,EAAsBC,YAAOC,KAAKC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAZJ,CAAY,4BAsBzBK,UAlBGC,IAAA,IAAC,SAAEC,EAAQ,KAAEC,GAAMF,EAAA,OACnCG,IAAAC,cAACC,IAAM,CAACJ,SAAUA,GAChBE,IAAAC,cAACX,EAAmB,CAACa,UAAU,cAC7BH,IAAAC,cAACG,IAAI,CAACL,KAAMA,EAAKM,KAAKC,QACtBN,IAAAC,cAACM,IAAK,CAACR,KAAMA,EAAKS,MAAMF,QACxBN,IAAAC,cAACQ,IAAI,CAACV,KAAMA,EAAKW,KAAKJ,QACtBN,IAAAC,cAACU,IAAQ,CAACZ,KAAMA,EAAKa,SAASN,QAC9BN,IAAAC,cAACY,IAAQ,CAACd,KAAMA,EAAKe,SAASR,QAC9BN,IAAAC,cAACc,IAAO,CAAChB,KAAMA,EAAKiB,QAAQV","file":"component---src-pages-index-js-29f2c322de1dffe7f6f2.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport {\n  Layout,\n  Hero,\n  About,\n  Jobs,\n  Featured,\n  Projects,\n  Contact,\n} from \"@components\";\nimport styled from \"styled-components\";\nimport { Main } from \"@styles\";\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Projects data={data.projects.edges} />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 700\n                  quality: 90\n                  traceSVG: { color: \"#64ffda\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/about/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(\n                  maxWidth: 700\n                  quality: 90\n                  traceSVG: { color: \"#64ffda\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            location\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 700\n                  quality: 90\n                  traceSVG: { color: \"#64ffda\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/contact/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}